#include<bits/stdc++.h>
using namespace std;

typedef long long LL;
typedef unsigned long long ULL;
typedef pair<int,int> pii;
const int SZ = 210;
const int mod = 78294349;

LL read() {
    LL n = 0;
    bool flag = 0;
    char a = getchar();
    while(a > '9' || a < '0') { if(a == '-') flag = 1; a = getchar(); }
    while(a <= '9' && a >= '0') { n = n * 10 + a - '0'; a = getchar(); }
    if(flag) n = -n;
    return n;
}

int mp[SZ][SZ];
int n,m;

ULL get_hash() {
    ULL ans = 0;
    for(int i = 1;i <= n;i ++)
        for(int j = 1;j <= m;j ++)
            ans = ans * 233 + mp[i][j] + 1;
    return ans;
}
void up() {
    for(int j = 1;j <= m;j ++) {
        int tot = 0;
        for(int i = 1;i <= n;i ++) {
            if(mp[i][j]) mp[++tot][j]=mp[i][j];
        }
        for(int i = tot + 1;i <= n;i ++) mp[i][j] = 0;
    }
}

void down() {
    for(int j = 1;j <= m;j ++) {
        int tot = n + 1;
        for(int i = n;i >= 1;i --) {
            if(mp[i][j]) mp[--tot][j]=mp[i][j];
        }
        for(int i = tot - 1;i >= 1;i --) mp[i][j] = 0;
    }
}

void left() {
    for(int i = 1;i <= n;i ++) {
        int tot = 0;
        for(int j = 1;j <= m;j ++) {
            if(mp[i][j]) mp[i][++tot] = mp[i][j];
        }
        for(int j = tot + 1;j <= m;j ++) mp[i][j] = 0;
    }
}

void right() {
    for(int i = 1;i <= n;i ++) {
        int tot = m + 1;
        for(int j = m;j >= 1;j --) {
            if(mp[i][j]) mp[i][--tot] = mp[i][j];
        }
        for(int j = tot - 1;j >= 1;j --) mp[i][j] = 0;
    }
}

LL ksm(LL a,LL b) {
    LL ans = 1;
    while(b) {
        if(b & 1) ans = a * ans % mod;
        a = a * a % mod;
        b >>= 1;
    }
    return ans;
}

int pri[] = {7,1321,8467};
char str[SZ][SZ];
int ini[SZ][SZ],a[SZ*SZ];
bool vis[SZ*SZ];
int mi[SZ*SZ] = {0};

int dfs(int u) {
    if(vis[u]) return 0;
    vis[u] = 1;
    return dfs(a[u]) + 1;
}

int main() {
    int T = read(),cc = 0;
    while(T --) {
        n = read(),m = read();
        for(int i = 1;i <= n;i ++)
            scanf("%s",str[i]+1);
        int tot = 0;
        for(int i = 1;i <= n;i ++) {
            for(int j = 1;j <= m;j ++) {
                if(str[i][j] == '#')
                    mp[i][j] = ini[i][j] = ++ tot;
                else
                    mp[i][j] = ini[i][j] = 0;
            }
        }
        for(int i = 1;i <= n*m;i ++) vis[i] = 0,a[i] = 0,mi[i] = 0;
        up(); right(); down(); left();
        //print(ini);
       // print(mp);
        for(int i = 1;i <= n;i ++) {
            for(int j = 1;j <= m;j ++) {
                if(str[i][j] == '#')
                    a[mp[i][j]] = ini[i][j];
            }
        }
        LL ans = 1,dd = 1;
        for(int i = 1;i <= tot;i ++) {
            if(vis[i]) continue;
            LL x = dfs(i);/*
dd = dd * x / __gcd(dd,x);
//            cout << x << endl;
            for(int j = 0;j < 3;j ++) {
                int t = 0;
                while(x % pri[j] == 0) x /= pri[j],t ++;
                mi[j] = max(mi[j],t);
            }

            cout << dd << " " << x << endl;
            //printf("%lld * %lld / %lld\n",ans,x,__gcd(ans,x));
            LL gcd = __gcd(ans,x);
            ans = ans * ksm(gcd,67050720-1)%mod*x%mod;*/
            for(int j = 2;j * j<= x;j ++) {
                if(x % j == 0) {
                    int t = 0;
                    while(x % j == 0) x /= j,t ++;
                    mi[j] = max(mi[j],t);
                }
            }
            if(x != 1) {
                mi[x] = max(mi[x],1);
            }
        }

        for(int i = 1;i <= n * m;i ++) {
            while(mi[i] --) ans = ans * i % mod;
        }
        /*
        cout << dd %mod << " " << ans << endl;
        for(int i = 0;i < 3;i ++) cout << mi[i] << " "; puts("");
        for(int i = 0;i < 3;i ++) {
            while(mi[i] --) ans = 1ll * ans * pri[i] % mod;
        }
        printf("%lld\n",dd%mod);*/
        printf("Case %d: %lld\n",++ cc,ans);
    }
}
/**
233
50 50
#.................................................
#.................................................
##................................................
##................................................
#####.............................................
######............................................
######............................................
########..........................................
##########........................................
##########........................................
##########........................................
###########.......................................
###########.......................................
############......................................
#############.....................................
##############....................................
##############....................................
###############...................................
################..................................
################..................................
################..................................
#################.................................
###################...............................
####################..............................
####################..............................
#####################.............................
#####################.............................
######################............................
########################..........................
########################..........................
##########################........................
###########################.......................
#############################.....................
##############################....................
##############################....................
###############################...................
###############################...................
#################################.................
###################################...............
###################################...............
###################################...............
####################################..............
####################################..............
####################################..............
#####################################.............
######################################............
########################################..........
#########################################.........
#########################################.........
##########################################........

10245144

*/
